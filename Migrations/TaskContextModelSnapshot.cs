// <auto-generated />
using System;
using Entity_Framework;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Entity_Framework.Migrations
{
    [DbContext(typeof(TaskContext))]
    partial class TaskContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.20")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Entity_Framework.Models.Category", b =>
                {
                    b.Property<Guid>("CategoryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CategoryDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("CategoryImpact")
                        .HasColumnType("int");

                    b.Property<string>("CategoryName")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.HasKey("CategoryId");

                    b.ToTable("Category", (string)null);

                    b.HasData(
                        new
                        {
                            CategoryId = new Guid("3b085bfd-2240-4d4d-a6e8-e1f2155c1595"),
                            CategoryImpact = 20,
                            CategoryName = "Activities to Do"
                        },
                        new
                        {
                            CategoryId = new Guid("3b085bfd-2240-4d4d-a6e8-e1f2155c1502"),
                            CategoryImpact = 10,
                            CategoryName = "Personal Activities "
                        });
                });

            modelBuilder.Entity("Entity_Framework.Models.Task", b =>
                {
                    b.Property<Guid>("TaskId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CategoryId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("PriorityTask")
                        .HasColumnType("int");

                    b.Property<DateTime>("TaskDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("TaskDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TaskTitle")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.HasKey("TaskId");

                    b.HasIndex("CategoryId");

                    b.ToTable("Task", (string)null);

                    b.HasData(
                        new
                        {
                            TaskId = new Guid("3b085bfd-2240-4d4d-a6e8-e1f2155c1510"),
                            CategoryId = new Guid("3b085bfd-2240-4d4d-a6e8-e1f2155c1595"),
                            PriorityTask = 1,
                            TaskDate = new DateTime(2024, 6, 11, 0, 9, 51, 592, DateTimeKind.Local).AddTicks(1888),
                            TaskTitle = "pay the internet"
                        },
                        new
                        {
                            TaskId = new Guid("3b085bfd-2240-4d4d-a6e8-e1f2155c1511"),
                            CategoryId = new Guid("3b085bfd-2240-4d4d-a6e8-e1f2155c1502"),
                            PriorityTask = 0,
                            TaskDate = new DateTime(2024, 6, 11, 0, 9, 51, 592, DateTimeKind.Local).AddTicks(1912),
                            TaskTitle = "Wash My Shoes"
                        });
                });

            modelBuilder.Entity("Entity_Framework.Models.Task", b =>
                {
                    b.HasOne("Entity_Framework.Models.Category", "Category")
                        .WithMany("Task")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");
                });

            modelBuilder.Entity("Entity_Framework.Models.Category", b =>
                {
                    b.Navigation("Task");
                });
#pragma warning restore 612, 618
        }
    }
}
